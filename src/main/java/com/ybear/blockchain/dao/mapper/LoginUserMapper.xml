<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ybear.blockchain.dao.LoginUserMapper">
  <resultMap id="BaseResultMap" type="com.ybear.blockchain.dao.model.LoginUser">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="cellphone" jdbcType="VARCHAR" property="cellphone" />
    <result column="cellhone_verified" jdbcType="BIT" property="cellhoneVerified" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="disabled" jdbcType="BIT" property="disabled" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="email_verified" jdbcType="BIT" property="emailVerified" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="birthday" jdbcType="INTEGER" property="birthday" />
    <result column="locked" jdbcType="BIT" property="locked" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="profile_image" jdbcType="VARCHAR" property="profileImage" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="version" jdbcType="BIGINT" property="version" />
    <result column="city_id" jdbcType="INTEGER" property="cityId" />
    <result column="district_id" jdbcType="INTEGER" property="districtId" />
    <result column="province_id" jdbcType="INTEGER" property="provinceId" />
    <result column="street" jdbcType="VARCHAR" property="street" />
    <result column="last_user_lock_record_id" jdbcType="BIGINT" property="lastUserLockRecordId" />
    <result column="real_name_identification_status" jdbcType="INTEGER" property="realNameIdentificationStatus" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="encode_password" jdbcType="VARCHAR" property="encodePassword" />
    <result column="recommend_id" jdbcType="VARCHAR" property="recommendId" />
    <result column="REGISTERFROM" jdbcType="VARCHAR" property="registerfrom" />
    <result column="register_from" jdbcType="VARCHAR" property="registerFrom" />
    <result column="register_by" jdbcType="VARCHAR" property="registerBy" />
    <result column="is_test" jdbcType="TINYINT" property="isTest" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ybear.blockchain.dao.model.LoginUser">
    <result column="additional_info" jdbcType="LONGVARBINARY" property="additionalInfo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cellphone, cellhone_verified, code, created_time, disabled, email, email_verified, 
    gender, birthday, locked, name, profile_image, updated_time, version, city_id, district_id, 
    province_id, street, last_user_lock_record_id, real_name_identification_status, nick_name, 
    encode_password, recommend_id, REGISTERFROM, register_from, register_by, is_test
  </sql>
  <sql id="Blob_Column_List">
    additional_info
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.ybear.blockchain.dao.model.LoginUserExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from login_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ybear.blockchain.dao.model.LoginUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from login_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from login_user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from login_user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ybear.blockchain.dao.model.LoginUserExample">
    delete from login_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ybear.blockchain.dao.model.LoginUser">
    insert into login_user (id, cellphone, cellhone_verified, 
      code, created_time, disabled, 
      email, email_verified, gender, 
      birthday, locked, name, 
      profile_image, updated_time, version, 
      city_id, district_id, province_id, 
      street, last_user_lock_record_id, real_name_identification_status, 
      nick_name, encode_password, recommend_id, 
      REGISTERFROM, register_from, register_by, 
      is_test, additional_info)
    values (#{id,jdbcType=VARCHAR}, #{cellphone,jdbcType=VARCHAR}, #{cellhoneVerified,jdbcType=BIT}, 
      #{code,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{disabled,jdbcType=BIT}, 
      #{email,jdbcType=VARCHAR}, #{emailVerified,jdbcType=BIT}, #{gender,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=INTEGER}, #{locked,jdbcType=BIT}, #{name,jdbcType=VARCHAR}, 
      #{profileImage,jdbcType=VARCHAR}, #{updatedTime,jdbcType=TIMESTAMP}, #{version,jdbcType=BIGINT}, 
      #{cityId,jdbcType=INTEGER}, #{districtId,jdbcType=INTEGER}, #{provinceId,jdbcType=INTEGER}, 
      #{street,jdbcType=VARCHAR}, #{lastUserLockRecordId,jdbcType=BIGINT}, #{realNameIdentificationStatus,jdbcType=INTEGER}, 
      #{nickName,jdbcType=VARCHAR}, #{encodePassword,jdbcType=VARCHAR}, #{recommendId,jdbcType=VARCHAR}, 
      #{registerfrom,jdbcType=VARCHAR}, #{registerFrom,jdbcType=VARCHAR}, #{registerBy,jdbcType=VARCHAR}, 
      #{isTest,jdbcType=TINYINT}, #{additionalInfo,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.ybear.blockchain.dao.model.LoginUser">
    insert into login_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cellphone != null">
        cellphone,
      </if>
      <if test="cellhoneVerified != null">
        cellhone_verified,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="disabled != null">
        disabled,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="emailVerified != null">
        email_verified,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="locked != null">
        locked,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="profileImage != null">
        profile_image,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="districtId != null">
        district_id,
      </if>
      <if test="provinceId != null">
        province_id,
      </if>
      <if test="street != null">
        street,
      </if>
      <if test="lastUserLockRecordId != null">
        last_user_lock_record_id,
      </if>
      <if test="realNameIdentificationStatus != null">
        real_name_identification_status,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="encodePassword != null">
        encode_password,
      </if>
      <if test="recommendId != null">
        recommend_id,
      </if>
      <if test="registerfrom != null">
        REGISTERFROM,
      </if>
      <if test="registerFrom != null">
        register_from,
      </if>
      <if test="registerBy != null">
        register_by,
      </if>
      <if test="isTest != null">
        is_test,
      </if>
      <if test="additionalInfo != null">
        additional_info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="cellphone != null">
        #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="cellhoneVerified != null">
        #{cellhoneVerified,jdbcType=BIT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="disabled != null">
        #{disabled,jdbcType=BIT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailVerified != null">
        #{emailVerified,jdbcType=BIT},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=INTEGER},
      </if>
      <if test="locked != null">
        #{locked,jdbcType=BIT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="profileImage != null">
        #{profileImage,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="districtId != null">
        #{districtId,jdbcType=INTEGER},
      </if>
      <if test="provinceId != null">
        #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="street != null">
        #{street,jdbcType=VARCHAR},
      </if>
      <if test="lastUserLockRecordId != null">
        #{lastUserLockRecordId,jdbcType=BIGINT},
      </if>
      <if test="realNameIdentificationStatus != null">
        #{realNameIdentificationStatus,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="encodePassword != null">
        #{encodePassword,jdbcType=VARCHAR},
      </if>
      <if test="recommendId != null">
        #{recommendId,jdbcType=VARCHAR},
      </if>
      <if test="registerfrom != null">
        #{registerfrom,jdbcType=VARCHAR},
      </if>
      <if test="registerFrom != null">
        #{registerFrom,jdbcType=VARCHAR},
      </if>
      <if test="registerBy != null">
        #{registerBy,jdbcType=VARCHAR},
      </if>
      <if test="isTest != null">
        #{isTest,jdbcType=TINYINT},
      </if>
      <if test="additionalInfo != null">
        #{additionalInfo,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ybear.blockchain.dao.model.LoginUserExample" resultType="java.lang.Long">
    select count(*) from login_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update login_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.cellphone != null">
        cellphone = #{record.cellphone,jdbcType=VARCHAR},
      </if>
      <if test="record.cellhoneVerified != null">
        cellhone_verified = #{record.cellhoneVerified,jdbcType=BIT},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.disabled != null">
        disabled = #{record.disabled,jdbcType=BIT},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.emailVerified != null">
        email_verified = #{record.emailVerified,jdbcType=BIT},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=INTEGER},
      </if>
      <if test="record.locked != null">
        locked = #{record.locked,jdbcType=BIT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.profileImage != null">
        profile_image = #{record.profileImage,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedTime != null">
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=BIGINT},
      </if>
      <if test="record.cityId != null">
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.districtId != null">
        district_id = #{record.districtId,jdbcType=INTEGER},
      </if>
      <if test="record.provinceId != null">
        province_id = #{record.provinceId,jdbcType=INTEGER},
      </if>
      <if test="record.street != null">
        street = #{record.street,jdbcType=VARCHAR},
      </if>
      <if test="record.lastUserLockRecordId != null">
        last_user_lock_record_id = #{record.lastUserLockRecordId,jdbcType=BIGINT},
      </if>
      <if test="record.realNameIdentificationStatus != null">
        real_name_identification_status = #{record.realNameIdentificationStatus,jdbcType=INTEGER},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.encodePassword != null">
        encode_password = #{record.encodePassword,jdbcType=VARCHAR},
      </if>
      <if test="record.recommendId != null">
        recommend_id = #{record.recommendId,jdbcType=VARCHAR},
      </if>
      <if test="record.registerfrom != null">
        REGISTERFROM = #{record.registerfrom,jdbcType=VARCHAR},
      </if>
      <if test="record.registerFrom != null">
        register_from = #{record.registerFrom,jdbcType=VARCHAR},
      </if>
      <if test="record.registerBy != null">
        register_by = #{record.registerBy,jdbcType=VARCHAR},
      </if>
      <if test="record.isTest != null">
        is_test = #{record.isTest,jdbcType=TINYINT},
      </if>
      <if test="record.additionalInfo != null">
        additional_info = #{record.additionalInfo,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update login_user
    set id = #{record.id,jdbcType=VARCHAR},
      cellphone = #{record.cellphone,jdbcType=VARCHAR},
      cellhone_verified = #{record.cellhoneVerified,jdbcType=BIT},
      code = #{record.code,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      disabled = #{record.disabled,jdbcType=BIT},
      email = #{record.email,jdbcType=VARCHAR},
      email_verified = #{record.emailVerified,jdbcType=BIT},
      gender = #{record.gender,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=INTEGER},
      locked = #{record.locked,jdbcType=BIT},
      name = #{record.name,jdbcType=VARCHAR},
      profile_image = #{record.profileImage,jdbcType=VARCHAR},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=BIGINT},
      city_id = #{record.cityId,jdbcType=INTEGER},
      district_id = #{record.districtId,jdbcType=INTEGER},
      province_id = #{record.provinceId,jdbcType=INTEGER},
      street = #{record.street,jdbcType=VARCHAR},
      last_user_lock_record_id = #{record.lastUserLockRecordId,jdbcType=BIGINT},
      real_name_identification_status = #{record.realNameIdentificationStatus,jdbcType=INTEGER},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      encode_password = #{record.encodePassword,jdbcType=VARCHAR},
      recommend_id = #{record.recommendId,jdbcType=VARCHAR},
      REGISTERFROM = #{record.registerfrom,jdbcType=VARCHAR},
      register_from = #{record.registerFrom,jdbcType=VARCHAR},
      register_by = #{record.registerBy,jdbcType=VARCHAR},
      is_test = #{record.isTest,jdbcType=TINYINT},
      additional_info = #{record.additionalInfo,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update login_user
    set id = #{record.id,jdbcType=VARCHAR},
      cellphone = #{record.cellphone,jdbcType=VARCHAR},
      cellhone_verified = #{record.cellhoneVerified,jdbcType=BIT},
      code = #{record.code,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      disabled = #{record.disabled,jdbcType=BIT},
      email = #{record.email,jdbcType=VARCHAR},
      email_verified = #{record.emailVerified,jdbcType=BIT},
      gender = #{record.gender,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=INTEGER},
      locked = #{record.locked,jdbcType=BIT},
      name = #{record.name,jdbcType=VARCHAR},
      profile_image = #{record.profileImage,jdbcType=VARCHAR},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=BIGINT},
      city_id = #{record.cityId,jdbcType=INTEGER},
      district_id = #{record.districtId,jdbcType=INTEGER},
      province_id = #{record.provinceId,jdbcType=INTEGER},
      street = #{record.street,jdbcType=VARCHAR},
      last_user_lock_record_id = #{record.lastUserLockRecordId,jdbcType=BIGINT},
      real_name_identification_status = #{record.realNameIdentificationStatus,jdbcType=INTEGER},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      encode_password = #{record.encodePassword,jdbcType=VARCHAR},
      recommend_id = #{record.recommendId,jdbcType=VARCHAR},
      REGISTERFROM = #{record.registerfrom,jdbcType=VARCHAR},
      register_from = #{record.registerFrom,jdbcType=VARCHAR},
      register_by = #{record.registerBy,jdbcType=VARCHAR},
      is_test = #{record.isTest,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ybear.blockchain.dao.model.LoginUser">
    update login_user
    <set>
      <if test="cellphone != null">
        cellphone = #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="cellhoneVerified != null">
        cellhone_verified = #{cellhoneVerified,jdbcType=BIT},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="disabled != null">
        disabled = #{disabled,jdbcType=BIT},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailVerified != null">
        email_verified = #{emailVerified,jdbcType=BIT},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=INTEGER},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=BIT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="profileImage != null">
        profile_image = #{profileImage,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="districtId != null">
        district_id = #{districtId,jdbcType=INTEGER},
      </if>
      <if test="provinceId != null">
        province_id = #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="street != null">
        street = #{street,jdbcType=VARCHAR},
      </if>
      <if test="lastUserLockRecordId != null">
        last_user_lock_record_id = #{lastUserLockRecordId,jdbcType=BIGINT},
      </if>
      <if test="realNameIdentificationStatus != null">
        real_name_identification_status = #{realNameIdentificationStatus,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="encodePassword != null">
        encode_password = #{encodePassword,jdbcType=VARCHAR},
      </if>
      <if test="recommendId != null">
        recommend_id = #{recommendId,jdbcType=VARCHAR},
      </if>
      <if test="registerfrom != null">
        REGISTERFROM = #{registerfrom,jdbcType=VARCHAR},
      </if>
      <if test="registerFrom != null">
        register_from = #{registerFrom,jdbcType=VARCHAR},
      </if>
      <if test="registerBy != null">
        register_by = #{registerBy,jdbcType=VARCHAR},
      </if>
      <if test="isTest != null">
        is_test = #{isTest,jdbcType=TINYINT},
      </if>
      <if test="additionalInfo != null">
        additional_info = #{additionalInfo,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ybear.blockchain.dao.model.LoginUser">
    update login_user
    set cellphone = #{cellphone,jdbcType=VARCHAR},
      cellhone_verified = #{cellhoneVerified,jdbcType=BIT},
      code = #{code,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      disabled = #{disabled,jdbcType=BIT},
      email = #{email,jdbcType=VARCHAR},
      email_verified = #{emailVerified,jdbcType=BIT},
      gender = #{gender,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=INTEGER},
      locked = #{locked,jdbcType=BIT},
      name = #{name,jdbcType=VARCHAR},
      profile_image = #{profileImage,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT},
      city_id = #{cityId,jdbcType=INTEGER},
      district_id = #{districtId,jdbcType=INTEGER},
      province_id = #{provinceId,jdbcType=INTEGER},
      street = #{street,jdbcType=VARCHAR},
      last_user_lock_record_id = #{lastUserLockRecordId,jdbcType=BIGINT},
      real_name_identification_status = #{realNameIdentificationStatus,jdbcType=INTEGER},
      nick_name = #{nickName,jdbcType=VARCHAR},
      encode_password = #{encodePassword,jdbcType=VARCHAR},
      recommend_id = #{recommendId,jdbcType=VARCHAR},
      REGISTERFROM = #{registerfrom,jdbcType=VARCHAR},
      register_from = #{registerFrom,jdbcType=VARCHAR},
      register_by = #{registerBy,jdbcType=VARCHAR},
      is_test = #{isTest,jdbcType=TINYINT},
      additional_info = #{additionalInfo,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ybear.blockchain.dao.model.LoginUser">
    update login_user
    set cellphone = #{cellphone,jdbcType=VARCHAR},
      cellhone_verified = #{cellhoneVerified,jdbcType=BIT},
      code = #{code,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      disabled = #{disabled,jdbcType=BIT},
      email = #{email,jdbcType=VARCHAR},
      email_verified = #{emailVerified,jdbcType=BIT},
      gender = #{gender,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=INTEGER},
      locked = #{locked,jdbcType=BIT},
      name = #{name,jdbcType=VARCHAR},
      profile_image = #{profileImage,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT},
      city_id = #{cityId,jdbcType=INTEGER},
      district_id = #{districtId,jdbcType=INTEGER},
      province_id = #{provinceId,jdbcType=INTEGER},
      street = #{street,jdbcType=VARCHAR},
      last_user_lock_record_id = #{lastUserLockRecordId,jdbcType=BIGINT},
      real_name_identification_status = #{realNameIdentificationStatus,jdbcType=INTEGER},
      nick_name = #{nickName,jdbcType=VARCHAR},
      encode_password = #{encodePassword,jdbcType=VARCHAR},
      recommend_id = #{recommendId,jdbcType=VARCHAR},
      REGISTERFROM = #{registerfrom,jdbcType=VARCHAR},
      register_from = #{registerFrom,jdbcType=VARCHAR},
      register_by = #{registerBy,jdbcType=VARCHAR},
      is_test = #{isTest,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>